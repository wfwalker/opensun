{
  "name": "volo-appcache",
  "description": "A volo command for generating an appcache manifest",
  "keywords": [
    "volo"
  ],
  "version": "0.0.2",
  "homepage": "http://github.com/volojs/volo-appcache",
  "author": {
    "name": "James Burke",
    "email": "jrburke@gmail.com",
    "url": "http://github.com/jrburke"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/volojs/volo-ghdeploy/blob/master/LICENSE"
    },
    {
      "type": "MIT",
      "url": "https://github.com/volojs/volo-ghdeploy/blob/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.6.7"
  },
  "readme": "# volo-appcache\n\nA [volo](https://github.com/volojs/volo) command for generating an appcache\nmanifest.\n\n## Installation\n\nInstall this command via npm into a project's local node_modules directory:\n\n    npm install volo-appcache\n\nThen, in the volofile for the project, create a volo command name that\ndoes a require() for this command, and pass it the following allowed options:\n\n```javascript\n//in the volofile\nmodule.exports = {\n    //Existing build command, not required to use volo-appcache\n    build: function () {},\n\n    //Creates a local project command called appcache\n    appcache: require('volo-appcache')({\n        //Optional array of volofile commands to run before executing\n        //this command\n        depends: ['build'],\n\n        //The directory to use for the manifest\n        //The manifest.appcache will be written\n        //inside this directory. Default value is\n        //shown:\n        dir: 'www-built',\n\n        //The path to the HTML file to modify to add the\n        //`manifest` attribute. Path is assumed to be inside\n        //the `dir` option mentioned above. Default value\n        //is shown:\n        htmlPath: 'index.html',\n\n        //The path to the template file to use for the manifest\n        //It defaults to the 'manifest.template' file in this\n        //directory. Be aware, the volo-appcache command assumes\n        //there are some tokens in the file that can be replaced\n        //with the file listing and the digest stamp. See\n        //manifest.template for an example.\n        manifestTemplate: ''\n    })\n}\n```\n\n## Overriding the basic manifest template\n\nThe `manifestTemplate` option mentioned above allows you to override the\n[basic template](https://github.com/volojs/volo-appcache/blob/master/manifest.template)\nused for the manifest. This can be useful if you want to specify  extra URLs to\ncache, or specify fallbacks for some URLs. Here is an example of a template\nthat specifies two other URLs to cache and specifies a fallback for\n`/submit.php`:\n\n```text\nCACHE MANIFEST\n# {stamp}\n\nCACHE:\nhttp://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.min.js\nhttp://cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js\n{files}\n\n# catch-all for anything else\nNETWORK:\n*\nhttp://*\nhttps://*\n\nFALLBACK:\n/submit.php offline.html\n```\n\n## Usage\n\nWhile in the project directory, just type:\n\n    volo appcache\n\nTo generate the manifest.appcache in the directory specified above. It will\nuse a digest of all the file contents to stamp the manifest.appcache for\nchanges, and it will modify the htmlPath file listed above to include the\n`manifest` attribute on the html tag.\n\n## License\n\nMIT and new BSD.\n",
  "readmeFilename": "README.md",
  "_id": "volo-appcache@0.0.2",
  "_from": "volo-appcache@"
}
